{"version":3,"sources":["components/controls/TaskInput.js","components/list/ListElement.js","components/list/ListContainer.js","components/appContainer/MainContainer.js","components/appContainer/MainWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["TaskInput","submitHandler","event","handleUpdateItems","props","formData","FormData","target","input","document","getElementById","preventDefault","get","value","onSubmit","this","className","type","id","name","placeholder","Component","ListElement","updateCheckBox","updateHandler","text","checked","index","updateTaskText","check","deleteHandler","muted","append","onClick","onChange","readOnly","ListContainer","items","handleDeleteItem","map","item","MainContainer","newState","state","counter","push","item_ind","findIndex","localStorage","setItem","JSON","stringify","setState","splice","data","getItem","parse","MainWrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c5bc834.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass TaskInput extends Component {\n\n    submitHandler = (event) => {\n        const {handleUpdateItems} = this.props;\n        const formData = new FormData(event.target);\n        const input = document.getElementById('task-input');\n\n        event.preventDefault();\n\n        handleUpdateItems(formData.get('task'))\n        input.value = ''\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.submitHandler}>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" id={'task-input'} className=\"form-control\" name={'task'} placeholder=\"New task\"/>\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-outline-secondary\" type=\"submit\">Add</button>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default TaskInput;","import React, {Component} from 'react';\n\n\nclass ListElement extends Component {\n    constructor(props) {\n        super(props);\n\n        this.updateHandler = this.props.updateHandler\n        this.deleteHandler = this.props.deleteHandler\n        this.index = this.props.index\n    }\n\n\n    updateCheckBox = (event) => {\n        this.updateHandler(this.props.text, event.target.checked, this.index)\n    }\n\n    updateTaskText = (event) => {\n        if (!this.props.check)\n            this.updateHandler(event.target.value, this.props.check, this.index)\n    }\n\n    render() {\n        const {check, text} = this.props\n        let muted, append;\n        if (check) {\n            muted = \"text-muted\"\n            append = <div className=\"input-group-append\">\n                <span className=\"input-group-text bg-secondary\">\n                    <span className=\"fa fa-times-circle delete-item\"\n                          onClick={() => this.deleteHandler(this.props.index)}>\n                    </span>\n                </span>\n            </div>\n        } else {\n            muted = \"\"\n            append = \"\"\n        }\n\n        return (\n            <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">\n                        <input type=\"checkbox\" onChange={this.updateCheckBox} checked={check}/>\n                    </div>\n                </div>\n                <input type=\"text\" onChange={this.updateTaskText} readOnly={check} value={text}\n                       className={\"form-control \" + muted}/>\n                {append}\n            </div>\n        );\n\n    }\n}\n\nexport default ListElement;","import React, {Component} from 'react';\nimport ListElement from \"./ListElement\";\n\n\nclass ListContainer extends Component {\n    render() {\n        const {items, handleUpdateItems, handleDeleteItem} = this.props;\n\n        return (\n            <ul className={'list-group'}> {\n                items.map((item) => {\n                    return <ListElement key={item.index} index={item.index} check={item.check} text={item.text}\n                                        updateHandler={handleUpdateItems}\n                                        deleteHandler={handleDeleteItem}\n                    />\n                })\n            }\n            </ul>\n        );\n    }\n}\n\nexport default ListContainer;","import React, {Component} from 'react';\nimport TaskInput from \"../controls/TaskInput\";\nimport ListContainer from \"../list/ListContainer\";\n\nclass MainContainer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \"counter\": 0,\n            \"items\": [],\n        }\n    }\n\n    componentDidMount() {\n        const data = localStorage.getItem(\"another-to-do\")\n        if (data !== null) {\n            this.setState(JSON.parse(data))\n        } else {\n            localStorage.setItem(\"another-to-do\", JSON.stringify(this.state))\n        }\n    }\n\n    handleUpdateItems = (text, check = 'false', index = null) => {\n        let newState = {...this.state};\n\n        if (index === null) {\n            index = newState.counter++;\n            newState.items.push({\n                \"index\": index,\n                \"text\": text,\n                \"check\": check === 'true'\n            })\n        } else {\n            const item_ind = newState.items.findIndex((item) => item.index === index)\n            newState.items[item_ind] = {\n                \"index\": index,\n                \"text\": text,\n                \"check\": check\n            }\n        }\n\n        localStorage.setItem(\"another-to-do\", JSON.stringify(newState))\n\n        this.setState(newState)\n    }\n\n    handleDeleteItem = (index) => {\n        let newState = {...this.state};\n\n        const item_ind = newState.items.findIndex((item) => item.index === index)\n        newState.items.splice(item_ind, 1)\n\n        localStorage.setItem(\"another-to-do\", JSON.stringify(newState))\n        this.setState(newState)\n    }\n\n    render() {\n        return (\n            <div className={'col-11 col-sm-8 col-md-6 col-xl-6'}>\n                <h2>To-do</h2>\n                <hr className={'mb-3'}/>\n                <ListContainer items={this.state.items}\n                               handleUpdateItems={this.handleUpdateItems}\n                               handleDeleteItem={this.handleDeleteItem}/>\n                <TaskInput handleUpdateItems={this.handleUpdateItems}/>\n            </div>\n        );\n    }\n}\n\nexport default MainContainer;","import React, {Component} from 'react';\nimport MainContainer from \"./MainContainer\";\n\nclass MainWrapper extends Component {\n    render() {\n        return (\n            <div className={'container-xl'}>\n                <div className=\"row justify-content-center py-5\">\n                    <MainContainer/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainWrapper;","import './App.css';\nimport React from \"react\";\nimport MainWrapper from \"./components/appContainer/MainWrapper\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <MainWrapper/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}